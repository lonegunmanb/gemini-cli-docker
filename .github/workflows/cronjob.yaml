name: cronjob

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'

permissions:
  contents: write
  pull-requests: read


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check Gemini CLI version
        run: |
        latest=$(gh release list \
        --repo google-gemini/gemini-cli \
        --exclude-pre-releases \
        --exclude-drafts \
        --json tagName | \
        jq -r '.[].tagName' | \
        grep -E '^[vV]?[0-9]+\.[0-9]+\.[0-9]+$' | \
        sort -V | \
        tail -n1)
        echo "gemini cli latest version: $latest"
        echo VERSION=$latest >> $GITHUB_ENV

        # Check if current repo already has this tag
        tag_exists=$(gh api repos/${{ github.repository }}/git/refs/tags/$latest --silent && echo "true" || echo "")
        if [ -n "$tag_exists" ]; then
          echo "Tag $latest already exists in this repository. Stopping workflow."
          exit 0
        fi
        
        echo "TAG_EXISTS=$tag_exists" >> $GITHUB_ENV
      - name: Checkout code
        if: ${{ env.TAG_EXISTS != 'true' }}
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac #v4.0.0
      - name: Set up QEMU
        if: ${{ env.TAG_EXISTS != 'true' }}
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0
      - name: Set up Docker Buildx
        if: ${{ env.TAG_EXISTS != 'true' }}
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2.10.0
      - name: Login to DockerHub
        if: ${{ env.TAG_EXISTS != 'true' }}
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          registry: ${{ secrets.DOCKER_SERVER_URL }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        if: ${{ env.TAG_EXISTS != 'true' }}
        uses: docker/build-push-action@1104d471370f9806843c095c1db02b5a90c5f8b6 # v3.3.1
        with:
          context: .
          push: true
          platforms: |
            linux/amd64
            linux/arm64
          tags: |
            ${{ secrets.DOCKER_SERVER_URL }}/${{ secrets.DOCKER_REPO }}:latest
            ${{ secrets.DOCKER_SERVER_URL }}/${{ secrets.DOCKER_REPO }}:${{ env.VERSION }}
          build-args: |
            VERSION=${{ env.VERSION }}
      - name: Create and push tag
        if: ${{ env.TAG_EXISTS != 'true' }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}